[Installed App by Host - Nix TA and Win TA]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @w0
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
search = sourcetype=package OR sourcetype=Script:InstalledApps | eval nameversion=DisplayName.":".DisplayVersion | stats values(nameversion) by host

[Installed Apps by Host - Sysmon]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @w0
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
search = index=* sourcetype=*sysmon* EventCode!=3 | dedup app | stats values(app) by host

[Running Apps by Host - WinHostMon]
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
search = index=* sourcetype=WinHostMon* source=process Name!=*splunk* | stats values(app) by host

[Running Apps over time]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index","Whitelist","Blacklist","DisplayName","License"]
display.general.type = visualizations
display.page.search.mode = verbose
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart.stackMode = stacked
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
search = index=* sourcetype=ps OR (sourcetype=WinHostMon* source=process) | lookup appContext app OUTPUT DisplayName License Whitelist Blacklist | eval DisplayName=if(isnull(DisplayName),"Unknown",DisplayName) | timechart span=5m count by DisplayName

[Generate running apps lookup - Scheduled]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index","Whitelist","Blacklist","DisplayName","License","app","eventtype","DisplayVersion"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
schedule_window = 5
search = |inputlookup appContext.csv | append [search eventtype=runningapps  _index_earliest=-60m@m | fields app | table app DisplayName License Whitelist Blacklist | dedup app sortby -app] | table app DisplayName License Whitelist Blacklist | dedup app sortby -DisplayName | outputlookup appContext.csv createinapp=t

[Generate installed apps lookup - Scheduled]
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index","Whitelist","Blacklist","DisplayName","License","app","eventtype","DisplayVersion"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
schedule_window = 5
search = |inputlookup apps.csv | append [search eventtype=installedapps  _index_earliest=-60m@m | rex max_match=0 "(?im)(?<DisplayName>[\w\s]*[^\s]{2,})\s{1,}(?<Version>[\w\s]*[^\s]{2,})\s{1,}" | fields DisplayName | mvexpand DisplayName | table DisplayName | dedup DisplayName sortby -DisplayName] |  dedup DisplayName sortby -DisplayName | outputlookup apps.csv createinapp=t

[Generate hosts lookup - Scheduled]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","tag","aaa","os","index","Whitelist","Blacklist","DisplayName","License","app","eventtype","DisplayVersion"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = sam
request.ui_dispatch_view = search
schedule_window = 5
search = |inputlookup hosts.csv | append [search tag=sam _index_earliest=-60m@m | fields host | table host | dedup host sortby -host] | dedup host sortby -host
